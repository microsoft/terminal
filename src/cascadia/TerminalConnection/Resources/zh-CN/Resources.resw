<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AzureCodeExpiry" xml:space="preserve">
    <value>此代码将在 15 分钟后过期。</value>
  </data>
  <data name="AzureEnterTenant" xml:space="preserve">
    <value>请输入所需的租户编号。</value>
  </data>
  <data name="AzureNewLogin" xml:space="preserve">
    <value>输入 {0} 以使用新帐户进行登录</value>
    <comment>{0} will be replaced with the resource from AzureUserEntry_NewLogin; it is intended to be a single-character shorthand for "new account"</comment>
  </data>
  <data name="AzureRemoveStored" xml:space="preserve">
    <value>输入 {0} 以删除上面保存的连接设置。</value>
    <comment>{0} will be replaced with the resource from AzureUserEntry_RemoveStored; it is intended to be a single-character shorthand for "remove stored"</comment>
  </data>
  <data name="AzureInvalidAccessInput" xml:space="preserve">
    <value>请输入有效的数字以访问存储的连接设置，输入 {0} 以使用新帐户进行登录，或者输入 {1} 以删除保存的连接设置。</value>
    <comment>{0} will be replaced with the resource from AzureUserEntry_NewLogin, and {1} will be replaced with AzureUserEntry_RemoveStored. This is an error message, used after AzureNewLogin/AzureRemoveStored if the user enters an invalid value.</comment>
  </data>
  <data name="AzureNonNumberError" xml:space="preserve">
    <value>请输入一个数字。</value>
  </data>
  <data name="AzureNumOutOfBoundsError" xml:space="preserve">
    <value>数字超出范围。请输入一个有效的数字。</value>
  </data>
  <data name="AzureNoTenants" xml:space="preserve">
    <value>无法找到任何租户。</value>
  </data>
  <data name="AzureNoCloudAccount" xml:space="preserve">
    <value>尚未设置云 shell 帐户。请访问 https://shell.azure.com 进行设置。</value>
    <comment>{Locked="https://shell.azure.com"} This URL should not be localized. Everything else should.</comment>
  </data>
  <data name="AzureStorePrompt" xml:space="preserve">
    <value>是否要保存这些连接设置以供将来登录? [{0}/{1}]</value>
    <comment>{0} and {1} will be replaced with AzureUserEntry_Yes and AzureUserEntry_No. They are single-character shorthands for "yes" and "no" in this language.</comment>
  </data>
  <data name="AzureInvalidStoreInput" xml:space="preserve">
    <value>请输入 {0} 或 {1}</value>
    <comment>{0} and {1} will be replaced with AzureUserEntry_Yes and AzureUserEntry_No. This resource will be used as an error response after AzureStorePrompt.</comment>
  </data>
  <data name="AzureRequestingCloud" xml:space="preserve">
    <value>正在请求云 shell 实例...</value>
  </data>
  <data name="AzureSuccess" xml:space="preserve">
    <value>已成功。</value>
  </data>
  <data name="AzureRequestingTerminal" xml:space="preserve">
    <value>正在请求终端(这可能需要一些时间)...</value>
  </data>
  <data name="AzureTokensStored" xml:space="preserve">
    <value>已保存你的连接设置以供将来登录。</value>
  </data>
  <data name="AzureNoTokens" xml:space="preserve">
    <value>没有要删除的令牌。</value>
  </data>
  <data name="AzureTokensRemoved" xml:space="preserve">
    <value>已删除保存的连接设置。</value>
  </data>
  <data name="AzureOldCredentialsFlushedMessage" xml:space="preserve">
    <value>身份验证参数已更改。您需要重新登录。</value>
  </data>
  <data name="AzureUnknownTenantName" xml:space="preserve">
    <value>&lt;未知租户名称&gt;</value>
  </data>
  <data name="AzureIthTenant" xml:space="preserve">
    <value>租户 {0}: {1} ({2})</value>
    <comment>{0} is the tenant's number, which the user will enter to connect to the tenant. {1} is the tenant's display name, which will be meaningful for the user. {2} is the tenant's internal ID number.</comment>
  </data>
  <data name="AzureSuccessfullyAuthenticated" xml:space="preserve">
    <value>已经过身份验证。</value>
  </data>
  <data name="AzureUserEntry_NewLogin" xml:space="preserve">
    <value>n</value>
    <comment>This is shorthand for "new login". The user must enter this character to activate the New Login feature (AzureInvalidAccessInput, AzureNewLogin)</comment>
  </data>
  <data name="AzureUserEntry_RemoveStored" xml:space="preserve">
    <value>r</value>
    <comment>This is shorthand for "remove saved connections". The user must enter this character to activate the Remove Saved Logins feature (AzureRemoveStored, AzureInvalidAccessInput)</comment>
  </data>
  <data name="AzureUserEntry_Yes" xml:space="preserve">
    <value>y</value>
    <comment>This is shorthand for "yes". The user must enter this character to CONFIRM a prompt.</comment>
  </data>
  <data name="AzureUserEntry_No" xml:space="preserve">
    <value>n</value>
    <comment>This is shorthand for "no". The user must enter this character to DECLINE a prompt.</comment>
  </data>
  <data name="ProcessExited" xml:space="preserve">
    <value>[已退出进程，代码为 {0}]</value>
    <comment>The first argument {0} is the error code of the process. When there is no error, the number ZERO will be displayed. </comment>
  </data>
  <data name="CtrlDToClose" xml:space="preserve">
    <value>现在可以使用Ctrl+D关闭此终端，或按 Enter 重新启动。</value>
    <comment>"Ctrl+D" and "Enter" represent keys the user will press (control+D and Enter).</comment>
  </data>
  <data name="ProcessFailedToLaunch" xml:space="preserve">
    <value>[出现错误 {0} (启动“{1}”时)]</value>
    <comment>The first argument {0} is the error code. The second argument {1} is the user-specified path to a program.
      If this string is broken to multiple lines, it will not be displayed properly.</comment>
  </data>
  <data name="BadPathText" xml:space="preserve">
    <value>无法访问启动目录“{0}”</value>
    <comment>The first argument {0} is a path to a directory on the filesystem, as provided by the user.</comment>
  </data>
  <data name="ElevationRequired" xml:space="preserve">
    <value>请求的操作需要提升。</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>系统找不到指定的文件。</value>
  </data>
</root>